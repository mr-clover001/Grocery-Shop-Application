{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../Services/grocery-products.service\";\nconst _c0 = [\"fileInput\"];\nclass UpdateProductListComponent {\n  constructor(service) {\n    this.service = service;\n    this.isProductAdded = false;\n    this.addProductForm = new FormGroup({\n      productName: new FormControl(\"\", [Validators.required, Validators.minLength(4), Validators.pattern(\"[a-zA-Z].*\")]),\n      description: new FormControl(\"\", [Validators.required, Validators.minLength(5)]),\n      quantity: new FormControl(\"\", [Validators.required, Validators.pattern(\"[1-50]*\")]),\n      imageFileName: new FormControl(\"\", [Validators.required]),\n      price: new FormControl(\"\", [Validators.required]),\n      discount: new FormControl(\"\", [Validators.required, Validators.pattern(\"[1-95]*\")]),\n      specification: new FormControl(\"\", [Validators.required])\n    });\n  }\n  get ProductName() {\n    return this.addProductForm.get(\"productName\");\n  }\n  get Description() {\n    return this.addProductForm.get(\"description\");\n  }\n  get Quantity() {\n    return this.addProductForm.get(\"quantity\");\n  }\n  get ImageFileName() {\n    return this.addProductForm.get(\"imageFileName\");\n  }\n  get Price() {\n    return this.addProductForm.get(\"price\");\n  }\n  get Discount() {\n    return this.addProductForm.get(\"discount\");\n  }\n  get Specification() {\n    return this.addProductForm.get(\"specification\");\n  }\n  dataAdded() {\n    this.service.AddProducts(this.addProductForm.value).subscribe(res => {\n      console.log(res);\n      this.isProductAdded = true;\n      this.addProductForm.reset();\n      this.selectedFile = undefined;\n      this.selectedFileName = undefined;\n    }, error => {\n      console.error(error);\n    });\n  }\n  UploadPhoto(event) {\n    this.selectedFile = event.target.files[0];\n    this.selectedFileName = this.selectedFile ? this.selectedFile.name : undefined;\n    const formdata = new FormData();\n    if (this.selectedFile) {\n      formdata.append('file', this.selectedFile, this.selectedFileName);\n    }\n    this.service.UploadPhoto(formdata).subscribe(response => {\n      console.log(response.fileName);\n      this.selectedFileName = response.fileName;\n      const filenameParts = this.selectedFileName?.split('\\\\');\n      this.selectedFileName = filenameParts?.[filenameParts.length - 1];\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nUpdateProductListComponent.ɵfac = function UpdateProductListComponent_Factory(t) {\n  return new (t || UpdateProductListComponent)(i0.ɵɵdirectiveInject(i1.GroceryProductsService));\n};\nUpdateProductListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateProductListComponent,\n  selectors: [[\"app-update-product-list\"]],\n  viewQuery: function UpdateProductListComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  template: function UpdateProductListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"update-product-list works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { UpdateProductListComponent };","map":{"version":3,"names":["FormGroup","FormControl","Validators","UpdateProductListComponent","constructor","service","isProductAdded","addProductForm","productName","required","minLength","pattern","description","quantity","imageFileName","price","discount","specification","ProductName","get","Description","Quantity","ImageFileName","Price","Discount","Specification","dataAdded","AddProducts","value","subscribe","res","console","log","reset","selectedFile","undefined","selectedFileName","error","UploadPhoto","event","target","files","name","formdata","FormData","append","response","fileName","filenameParts","split","length","i0","ɵɵdirectiveInject","i1","GroceryProductsService","selectors","viewQuery","UpdateProductListComponent_Query","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\anoopkumar02\\Desktop\\Nagarro Assignment\\ExitProject Pratice\\PracticeProject2\\GroceryShopFrontend\\src\\app\\Component\\update-product-list\\update-product-list.component.ts","C:\\Users\\anoopkumar02\\Desktop\\Nagarro Assignment\\ExitProject Pratice\\PracticeProject2\\GroceryShopFrontend\\src\\app\\Component\\update-product-list\\update-product-list.component.html"],"sourcesContent":["import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GroceryProductsService } from '../Services/grocery-products.service';\n\n@Component({\n  selector: 'app-update-product-list',\n  templateUrl: './update-product-list.component.html',\n  styleUrls: ['./update-product-list.component.css']\n})\nexport class UpdateProductListComponent {\n  \n  @ViewChild('fileInput') fileInput!: ElementRef;\n\n  selectedFile: File | undefined;\n  selectedFileName: string | undefined;\n  PhotoFileName: any;\n\n  isProductAdded: boolean = false;\n\n  constructor(private service: GroceryProductsService) {}\n\n  addProductForm = new FormGroup({\n    productName: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(4),\n      Validators.pattern(\"[a-zA-Z].*\")\n    ]),\n    description: new FormControl(\"\", [\n      Validators.required,\n      Validators.minLength(5)\n    ]),\n    quantity: new FormControl(\"\", [\n      Validators.required,\n      Validators.pattern(\"[1-50]*\")\n    ]),\n    imageFileName: new FormControl(\"\", [Validators.required]),\n    price: new FormControl(\"\", [Validators.required]),\n    discount: new FormControl(\"\", [\n      Validators.required,\n      Validators.pattern(\"[1-95]*\")\n    ]),\n    specification: new FormControl(\"\", [Validators.required])\n  });\n\n  get ProductName(): FormControl {\n    return this.addProductForm.get(\"productName\") as FormControl;\n  }\n\n  get Description(): FormControl {\n    return this.addProductForm.get(\"description\") as FormControl;\n  }\n\n  get Quantity(): FormControl {\n    return this.addProductForm.get(\"quantity\") as FormControl;\n  }\n\n  get ImageFileName(): FormControl {\n    return this.addProductForm.get(\"imageFileName\") as FormControl;\n  }\n\n  get Price(): FormControl {\n    return this.addProductForm.get(\"price\") as FormControl;\n  }\n\n  get Discount(): FormControl {\n    return this.addProductForm.get(\"discount\") as FormControl;\n  }\n\n  get Specification(): FormControl {\n    return this.addProductForm.get(\"specification\") as FormControl;\n  }\n\n  dataAdded() {\n    this.service.AddProducts(this.addProductForm.value).subscribe(\n      (res) => {\n        console.log(res);\n        this.isProductAdded = true;\n        this.addProductForm.reset();\n        this.selectedFile = undefined;\n        this.selectedFileName = undefined;\n      },\n      (error) => {\n        console.error(error);\n      }\n    );\n  }\n  \n  \n  UploadPhoto(event: any) {\n    this.selectedFile = event.target.files[0];\n    this.selectedFileName = this.selectedFile ? this.selectedFile.name : undefined;\n  \n    const formdata: FormData = new FormData();\n    if (this.selectedFile) {\n      formdata.append('file', this.selectedFile, this.selectedFileName);\n    }\n  \n    this.service.UploadPhoto(formdata).subscribe(\n      (response: any) => {\n        console.log(response.fileName);\n        this.selectedFileName = response.fileName;\n        const filenameParts = this.selectedFileName?.split('\\\\');\n        this.selectedFileName = filenameParts?.[filenameParts.length - 1];\n      },\n      (error: any) => {\n        console.error(error);\n      }\n    );\n}\n}\n","<p>update-product-list works!</p>\n"],"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;AAGnE,MAKaC,0BAA0B;EAUrCC,YAAoBC,OAA+B;IAA/B,KAAAA,OAAO,GAAPA,OAAO;IAF3B,KAAAC,cAAc,GAAY,KAAK;IAI/B,KAAAC,cAAc,GAAG,IAAIP,SAAS,CAAC;MAC7BQ,WAAW,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAE,CAC/BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,EACvBR,UAAU,CAACS,OAAO,CAAC,YAAY,CAAC,CACjC,CAAC;MACFC,WAAW,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAC/BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACQ,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFG,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAC5BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACS,OAAO,CAAC,SAAS,CAAC,CAC9B,CAAC;MACFG,aAAa,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC,CAAC;MACzDM,KAAK,EAAE,IAAId,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC,CAAC;MACjDO,QAAQ,EAAE,IAAIf,WAAW,CAAC,EAAE,EAAE,CAC5BC,UAAU,CAACO,QAAQ,EACnBP,UAAU,CAACS,OAAO,CAAC,SAAS,CAAC,CAC9B,CAAC;MACFM,aAAa,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CAACC,UAAU,CAACO,QAAQ,CAAC;KACzD,CAAC;EAvBoD;EAyBtD,IAAIS,WAAWA,CAAA;IACb,OAAO,IAAI,CAACX,cAAc,CAACY,GAAG,CAAC,aAAa,CAAgB;EAC9D;EAEA,IAAIC,WAAWA,CAAA;IACb,OAAO,IAAI,CAACb,cAAc,CAACY,GAAG,CAAC,aAAa,CAAgB;EAC9D;EAEA,IAAIE,QAAQA,CAAA;IACV,OAAO,IAAI,CAACd,cAAc,CAACY,GAAG,CAAC,UAAU,CAAgB;EAC3D;EAEA,IAAIG,aAAaA,CAAA;IACf,OAAO,IAAI,CAACf,cAAc,CAACY,GAAG,CAAC,eAAe,CAAgB;EAChE;EAEA,IAAII,KAAKA,CAAA;IACP,OAAO,IAAI,CAAChB,cAAc,CAACY,GAAG,CAAC,OAAO,CAAgB;EACxD;EAEA,IAAIK,QAAQA,CAAA;IACV,OAAO,IAAI,CAACjB,cAAc,CAACY,GAAG,CAAC,UAAU,CAAgB;EAC3D;EAEA,IAAIM,aAAaA,CAAA;IACf,OAAO,IAAI,CAAClB,cAAc,CAACY,GAAG,CAAC,eAAe,CAAgB;EAChE;EAEAO,SAASA,CAAA;IACP,IAAI,CAACrB,OAAO,CAACsB,WAAW,CAAC,IAAI,CAACpB,cAAc,CAACqB,KAAK,CAAC,CAACC,SAAS,CAC1DC,GAAG,IAAI;MACNC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAI,CAACxB,cAAc,GAAG,IAAI;MAC1B,IAAI,CAACC,cAAc,CAAC0B,KAAK,EAAE;MAC3B,IAAI,CAACC,YAAY,GAAGC,SAAS;MAC7B,IAAI,CAACC,gBAAgB,GAAGD,SAAS;IACnC,CAAC,EACAE,KAAK,IAAI;MACRN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACH;EAGAC,WAAWA,CAACC,KAAU;IACpB,IAAI,CAACL,YAAY,GAAGK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACzC,IAAI,CAACL,gBAAgB,GAAG,IAAI,CAACF,YAAY,GAAG,IAAI,CAACA,YAAY,CAACQ,IAAI,GAAGP,SAAS;IAE9E,MAAMQ,QAAQ,GAAa,IAAIC,QAAQ,EAAE;IACzC,IAAI,IAAI,CAACV,YAAY,EAAE;MACrBS,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACX,YAAY,EAAE,IAAI,CAACE,gBAAgB,CAAC;;IAGnE,IAAI,CAAC/B,OAAO,CAACiC,WAAW,CAACK,QAAQ,CAAC,CAACd,SAAS,CACzCiB,QAAa,IAAI;MAChBf,OAAO,CAACC,GAAG,CAACc,QAAQ,CAACC,QAAQ,CAAC;MAC9B,IAAI,CAACX,gBAAgB,GAAGU,QAAQ,CAACC,QAAQ;MACzC,MAAMC,aAAa,GAAG,IAAI,CAACZ,gBAAgB,EAAEa,KAAK,CAAC,IAAI,CAAC;MACxD,IAAI,CAACb,gBAAgB,GAAGY,aAAa,GAAGA,aAAa,CAACE,MAAM,GAAG,CAAC,CAAC;IACnE,CAAC,EACAb,KAAU,IAAI;MACbN,OAAO,CAACM,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;;AAnGalC,0BAA0B,C;mBAA1BA,0BAA0B,EAAAgD,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,sBAAA;AAAA;AAA1BnD,0BAA0B,C;QAA1BA,0BAA0B;EAAAoD,SAAA;EAAAC,SAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;;;;;;;;;;;;MCTvCP,EAAA,CAAAS,cAAA,QAAG;MAAAT,EAAA,CAAAU,MAAA,iCAA0B;MAAAV,EAAA,CAAAW,YAAA,EAAI;;;;;SDSpB3D,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}