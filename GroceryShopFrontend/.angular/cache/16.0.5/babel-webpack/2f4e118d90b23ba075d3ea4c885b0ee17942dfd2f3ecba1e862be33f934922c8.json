{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.currentUser = new BehaviorSubject(null);\n    this.isLoggedIn = false;\n    this.menuType = \"Default\";\n    this.jwtHelpherSerivice = new JwtHelperService();\n    this.baseUrl = 'https://localhost:44395';\n  }\n  registerUser(user) {\n    return this.http.post(this.baseUrl + '/CreateUser', {\n      FirstName: user[0],\n      LastName: user[1],\n      Email: user[2],\n      Mobile: user[3],\n      Role: user[4],\n      Password: user[5]\n    }, {\n      responseType: \"text\"\n    });\n  }\n  LoginUser(user) {\n    return this.http.post(this.baseUrl + '/login', {\n      Email: user[0],\n      Password: user[1]\n    }, {\n      responseType: \"text\"\n    });\n  }\n  setToken(token) {\n    localStorage.setItem(\"access_token\", token);\n    const userInfo = token != null ? this.jwtHelpherSerivice.decodeToken(token) : null;\n    const user = userInfo ? {\n      id: userInfo.id,\n      firstname: userInfo.firstname,\n      lastname: userInfo.lastname,\n      email: userInfo.email,\n      mobile: userInfo.mobile,\n      role: userInfo.role\n    } : null;\n    localStorage.setItem(\"localUserData\", JSON.stringify(user));\n    this.currentUser.next(user);\n  }\n  isAdmin() {\n    var user = localStorage.getItem(\"localUserData\");\n    if (user != null) {\n      var userInfo = JSON.parse(user);\n      if (userInfo.role == \"Admin\") {\n        return true;\n      }\n    }\n    return false;\n  }\n  isUser() {\n    var user = localStorage.getItem(\"localUserData\");\n    if (user != null) {\n      var userInfo = JSON.parse(user);\n      if (userInfo.role == \"User\") {\n        return true;\n      }\n    }\n    return false;\n  }\n  signOut() {\n    localStorage.clear();\n    this.currentUser.next(null);\n    this.router.navigate(['Login']);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["JwtHelperService","BehaviorSubject","AuthService","constructor","http","router","currentUser","isLoggedIn","menuType","jwtHelpherSerivice","baseUrl","registerUser","user","post","FirstName","LastName","Email","Mobile","Role","Password","responseType","LoginUser","setToken","token","localStorage","setItem","userInfo","decodeToken","id","firstname","lastname","email","mobile","role","JSON","stringify","next","isAdmin","getItem","parse","isUser","signOut","clear","navigate","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\anoopkumar02\\Desktop\\Dotnet_Assignments\\anoop-kumar\\AnoopKumar_anoop.kumar.02@nagarro.com_FinalTest\\GroceryShopFrontend\\src\\app\\Component\\Services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  \n  currentUser: BehaviorSubject<any> = new BehaviorSubject(null);\n  isLoggedIn: boolean = false;\n  menuType: string = \"Default\";\n  jwtHelpherSerivice = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient,\n    private router: Router) { }\n\n  baseUrl = 'https://localhost:44395';\n  registerUser(user: any) {\n    return this.http.post(this.baseUrl + '/CreateUser',\n      {\n        FirstName: user[0],\n        LastName: user[1],\n        Email: user[2],\n        Mobile: user[3],\n        Role: user[4],\n        Password: user[5],\n\n      }, {\n      responseType: \"text\"\n    });\n  }\n\n  LoginUser(user: any) {\n    return this.http.post(this.baseUrl + '/login',\n      {\n        Email: user[0],\n        Password: user[1]\n      }, { responseType: \"text\" }\n    )\n  };\n\n\n  setToken(token: string) {\n    localStorage.setItem(\"access_token\", token);\n\n    const userInfo = token != null ? this.jwtHelpherSerivice.decodeToken(token) : null;\n    const user = userInfo ?\n      {\n        id: userInfo.id,\n        firstname: userInfo.firstname,\n        lastname: userInfo.lastname,\n        email: userInfo.email,\n        mobile: userInfo.mobile,\n        role: userInfo.role,\n      } : null;\n\n    localStorage.setItem(\"localUserData\", JSON.stringify(user));\n    this.currentUser.next(user);\n\n  }\n\n  isAdmin() {\n    var user = localStorage.getItem(\"localUserData\");\n    if (user != null) {\n      var userInfo = JSON.parse(user);\n\n      if (userInfo.role == \"Admin\") {\n        return true;\n      }\n    }\n    return false;\n\n  }\n\n  isUser(){\n    var user = localStorage.getItem(\"localUserData\");\n    if (user != null) {\n      var userInfo = JSON.parse(user);\n\n      if (userInfo.role == \"User\" ) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  signOut() {\n    localStorage.clear();\n    this.currentUser.next(null);\n    this.router.navigate(['Login']);\n\n  }\n\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}