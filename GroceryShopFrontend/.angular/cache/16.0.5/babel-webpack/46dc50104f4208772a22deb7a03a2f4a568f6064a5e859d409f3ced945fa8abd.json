{"ast":null,"code":"import { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass AuthService {\n  signOut() {\n    localStorage.clear();\n    this.router.navigate(['Login']);\n  }\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.currentUser = new BehaviorSubject(null);\n    this.isLoggedIn = false;\n    this.menuType = \"Default\";\n    this.isAdmin = false;\n    this.jwtHelpherSerivice = new JwtHelperService();\n    this.baseUrl = 'https://localhost:44395';\n  }\n  registerUser(user) {\n    return this.http.post(this.baseUrl + '/CreateUser', {\n      FirstName: user[0],\n      LastName: user[1],\n      Email: user[2],\n      Mobile: user[3],\n      Role: user[4],\n      Password: user[5]\n    }, {\n      responseType: \"text\"\n    });\n  }\n  LoginUser(user) {\n    return this.http.post(this.baseUrl + '/login', {\n      Email: user[0],\n      Password: user[1]\n    }, {\n      responseType: \"text\"\n    });\n  }\n  setToken(token) {\n    localStorage.setItem(\"access_token\", token);\n    const userInfo = token != null ? this.jwtHelpherSerivice.decodeToken(token) : null;\n    const user = userInfo ? {\n      id: userInfo.id,\n      firstname: userInfo.firstname,\n      lastname: userInfo.lastname,\n      email: userInfo.email,\n      mobile: userInfo.mobile,\n      role: userInfo.role\n    } : null;\n    localStorage.setItem(\"localUserData\", JSON.stringify(user));\n    //  this.setCurrentUser();\n    this.currentUser.next(user);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["JwtHelperService","BehaviorSubject","AuthService","signOut","localStorage","clear","router","navigate","constructor","http","currentUser","isLoggedIn","menuType","isAdmin","jwtHelpherSerivice","baseUrl","registerUser","user","post","FirstName","LastName","Email","Mobile","Role","Password","responseType","LoginUser","setToken","token","setItem","userInfo","decodeToken","id","firstname","lastname","email","mobile","role","JSON","stringify","next","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\anoopkumar02\\Desktop\\Nagarro Assignment\\ExitProject Pratice\\PracticeProject2\\GroceryShopFrontend\\src\\app\\Component\\Services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  signOut() {\n    localStorage.clear();\n    this.router.navigate(['Login']);\n  }\n \n  currentUser : BehaviorSubject<any> = new BehaviorSubject(null);\n  isLoggedIn: boolean = false;\n  menuType: string= \"Default\";\n  isAdmin :boolean = false;\n  jwtHelpherSerivice = new JwtHelperService();\n\n\n  constructor(\n    private http: HttpClient,\n    private router: Router) { }\n  \n  baseUrl = 'https://localhost:44395'\n  registerUser(user:any){\n   return  this.http.post(this.baseUrl+'/CreateUser',\n   {\n       FirstName: user[0],\n       LastName: user[1],\n       Email: user[2],\n       Mobile: user[3],\n       Role:user[4],\n       Password: user[5],\n\n   }, {\n       responseType:\"text\" });\n  }\n\n  LoginUser(user:any){\n    return this.http.post(this.baseUrl +'/login',\n    {\n        Email:user[0],\n        Password:user[1]\n    }, {responseType:\"text\"}\n  )};\n\n\n  setToken(token :string){\n    localStorage.setItem(\"access_token\", token);\n     \n    const userInfo = token !=null ? this.jwtHelpherSerivice.decodeToken(token):null;\n   const user = userInfo ? \n   {\n        id:userInfo.id,\n        firstname:userInfo.firstname,\n        lastname:userInfo.lastname,\n        email:userInfo.email,\n        mobile:userInfo.mobile,\n        role:userInfo.role,\n   } : null;\n  \n  localStorage.setItem(\"localUserData\",  JSON.stringify(user));\n  //  this.setCurrentUser();\n  this.currentUser.next(user);\n\n  }\n\n}\n"],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASC,eAAe,QAAQ,MAAM;;;;AAGtC,MAGaC,WAAW;EACtBC,OAAOA,CAAA;IACLC,YAAY,CAACC,KAAK,EAAE;IACpB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EASAC,YACUC,IAAgB,EAChBH,MAAc;IADd,KAAAG,IAAI,GAAJA,IAAI;IACJ,KAAAH,MAAM,GAANA,MAAM;IAThB,KAAAI,WAAW,GAA0B,IAAIT,eAAe,CAAC,IAAI,CAAC;IAC9D,KAAAU,UAAU,GAAY,KAAK;IAC3B,KAAAC,QAAQ,GAAU,SAAS;IAC3B,KAAAC,OAAO,GAAY,KAAK;IACxB,KAAAC,kBAAkB,GAAG,IAAId,gBAAgB,EAAE;IAO3C,KAAAe,OAAO,GAAG,yBAAyB;EAFP;EAG5BC,YAAYA,CAACC,IAAQ;IACpB,OAAQ,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACH,OAAO,GAAC,aAAa,EACjD;MACII,SAAS,EAAEF,IAAI,CAAC,CAAC,CAAC;MAClBG,QAAQ,EAAEH,IAAI,CAAC,CAAC,CAAC;MACjBI,KAAK,EAAEJ,IAAI,CAAC,CAAC,CAAC;MACdK,MAAM,EAAEL,IAAI,CAAC,CAAC,CAAC;MACfM,IAAI,EAACN,IAAI,CAAC,CAAC,CAAC;MACZO,QAAQ,EAAEP,IAAI,CAAC,CAAC;KAEnB,EAAE;MACCQ,YAAY,EAAC;KAAQ,CAAC;EAC3B;EAEAC,SAASA,CAACT,IAAQ;IAChB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACH,OAAO,GAAE,QAAQ,EAC5C;MACIM,KAAK,EAACJ,IAAI,CAAC,CAAC,CAAC;MACbO,QAAQ,EAACP,IAAI,CAAC,CAAC;KAClB,EAAE;MAACQ,YAAY,EAAC;IAAM,CAAC,CACzB;EAAA;EAGDE,QAAQA,CAACC,KAAa;IACpBxB,YAAY,CAACyB,OAAO,CAAC,cAAc,EAAED,KAAK,CAAC;IAE3C,MAAME,QAAQ,GAAGF,KAAK,IAAG,IAAI,GAAG,IAAI,CAACd,kBAAkB,CAACiB,WAAW,CAACH,KAAK,CAAC,GAAC,IAAI;IAChF,MAAMX,IAAI,GAAGa,QAAQ,GACrB;MACKE,EAAE,EAACF,QAAQ,CAACE,EAAE;MACdC,SAAS,EAACH,QAAQ,CAACG,SAAS;MAC5BC,QAAQ,EAACJ,QAAQ,CAACI,QAAQ;MAC1BC,KAAK,EAACL,QAAQ,CAACK,KAAK;MACpBC,MAAM,EAACN,QAAQ,CAACM,MAAM;MACtBC,IAAI,EAACP,QAAQ,CAACO;KAClB,GAAG,IAAI;IAETjC,YAAY,CAACyB,OAAO,CAAC,eAAe,EAAGS,IAAI,CAACC,SAAS,CAACtB,IAAI,CAAC,CAAC;IAC5D;IACA,IAAI,CAACP,WAAW,CAAC8B,IAAI,CAACvB,IAAI,CAAC;EAE3B;;AA3DWf,WAAW,C;mBAAXA,WAAW,EAAAuC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAX5C,WAAW,C;SAAXA,WAAW;EAAA6C,OAAA,EAAX7C,WAAW,CAAA8C,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEP/C,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}